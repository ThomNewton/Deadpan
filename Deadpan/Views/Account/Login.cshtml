@*
    This view renders the main login page for the application.
    It is strongly typed to the LoginViewModel, which defines the data
    and validation rules for the login form.
*@
@using Deadpan.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>
    <div class="row">
        @* This column contains the form for logging in with a local account (email and password). *@
        <div class="col-md-8">
            <section id="loginForm">
                @*
                    This form posts the user's credentials to the "Login" action in the "AccountController".
                    The ReturnUrl parameter ensures the user is redirected back to their original page after logging in.
                *@
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    @* Renders a hidden input with a unique token to prevent Cross-Site Request Forgery (CSRF) attacks. *@
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @* Displays a summary of any validation errors for the submitted form data. *@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-outline-dark" />
                        </div>
                    </div>
                    <p>
                        @* Provides a link to the registration page for new users. *@
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p> *@
                }
            </section>
        </div>
        @* This column is reserved for displaying external login options (e.g., Google, Facebook). *@
        <div class="col-md-4">
            <section id="socialLoginForm">
                @*
                    This renders the _ExternalLoginsListPartial.cshtml partial view, which contains
                    the buttons and logic for third-party authentication providers.
                *@
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</main>

@* This section includes the necessary jQuery scripts for client-side validation of the form. *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
